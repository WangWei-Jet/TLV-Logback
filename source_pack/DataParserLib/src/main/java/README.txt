工程说明：
1.本工程添加TLV（银联规范中定义的）格式数据的解析支持。StandardTlvParserImpl是对银联规范中定义的TAG,LEN,VALUE的具体实现

规范协议说明：
1.StandardTlvParserImpl

1.1	TLV 数据对象编码
	根据 ISO/IEC 8825 的定义，一个 TLV 数据对象包括 2-3 个连续数据域：
	标签域（Tag）包括一个或多个连续字节。它定义一种类别、类型和一个数字。本规范规定的数据对象的标签域用 3 个字节至编码。
	长度域（Len）包括一个或多个连续字节。它定义了接下来一个域的长度。本规范规定的数据对象的长度用 1-2 个字节编码。
	值域（Value）定义数据对象的值。如果 L＝‘00’，则值域不存在。
	
1.2	标签域编码
	标签的数据类型为BIN，由16进制表示，占1～3个字节长度。例如，“9F33”为一个占用两个字节的tag标签。而“95”为一个占用一个字节的tag标签。
若tag标签的第一个字节（高位的字节）的低五位为“11111”，则说明该tag占两个字节，例如“9F33”；否则占一个字节，例如“95”。 若标签占用两个字节，
首字节的取值如下：
	b8 b7 b6 b5 b4 b3 b2 b1 取值及含义
	0 0 0 1 1 1 1 1 1F
	0 0 1 1 1 1 1 1 3F
	0 1 0 1 1 1 1 1 5F
	0 1 1 1 1 1 1 1 7F
	1 0 0 1 1 1 1 1 9F
	1 0 1 1 1 1 1 1 BF
	1 1 0 1 1 1 1 1 DF
	1 1 1 1 1 1 1 1 FF
除tag标签首字节外， tag标签中其他字节最高位为1表示后续还有字节，最高位为0表示为最后一个字节。 除了首字节外，其他字节的取值如下：
	除首字节外其他字节取值：
	b8 b7 b6 b5 b4 b3 b2 b1 取值及含义
	0 X X X X X X X 00-7F，最后一个字节
	1 X X X X X X X 80-FF，后续还有字节
	
1.3长度域编码
	长度域的编码如下。
	当长度域的最高字节的b8位为 0时，长度域仅有一个字节。 b7到b1位的十进制值为值域的字节数。长度域的范围为 1到127。 如长度域为“0000 1000”，
表示长度占一个字节，后续的值域共 8 字节。
	当长度域的最高字节的 b8 位为 1 时，紧接的 b7 到 b1 位的十进制值为长度域最高字节后跟随的长度字节数。后续字节的整数值为值域的字节数。如长度
域为“1000 0001 1111 1111”，表示长度占 2 字节，后续的值域共 255 字节。所以若值域的长度在 127～255 字节之间，那么该数据对象长度域本身需要两个字
节。

2.CommonTlvParserImpl
2.1	相对于StandardTlvParserImpl中TLV的解析，改变了解析TAG的方式，TAG由用户通知解析库，通过setTag实现，当数据存在未知的TAG的时候，停止解析


另外:
1.本工程添加jar包中xml文件的解析（需注意文件的路径，如何才能在jar包中正确加载）
2.本工程添加logback的日志记录支持，将保存日志文件到本地
3.本工程采用maven构建模式，打包/混淆jar的时候注意第三方包的引用
4.将logback的日记记录调用改成反射调用，然后进行封装，在不引用logback的三方库的时候本工程也能正常运行
5.添加ant打包功能

注意：
1.当打成jar包在Android环境下使用的时候，请务必删除jar包中的logback.xml文件，因为部分手机在读取logback的时候可能因为找不到路径而导致崩溃